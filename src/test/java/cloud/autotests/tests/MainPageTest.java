package cloud.autotests.tests;

import static com.codeborne.selenide.Condition.text;
import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.$;
import static com.codeborne.selenide.Selenide.open;
import static com.codeborne.selenide.Selenide.title;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;

import cloud.autotests.helpers.DriverUtils;
import io.qameta.allure.Description;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;


public class MainPageTest extends TestBase {

    @DisplayName("Поиск шапки через общее поле поиска 'Я ищу'")
    @Test
    void searchHat() {
        step("Open url 'https://www.wildberries.ru/'", () ->
                open("https://www.wildberries.ru/"));
        step("Ввести в поле поиска значение", () ->
                $("#searchInput").setValue("Шапка").pressEnter());
        step("Проверить результаты поиска", () ->
                $(".searching-results__title").shouldHave(text("По запросу «шапка» найдено")));
    }

    @DisplayName("Поиск джинс через общее поле поиска 'Я ищу'")
    @Test
    void searchJeans() {
        step("Open url 'https://www.wildberries.ru/'", () ->
                open("https://www.wildberries.ru/"));
        step("Ввести в поле поиска значение", () ->
                $("#searchInput").setValue("Джинсы").pressEnter());
        step("Проверить результаты поиска", () ->
                $(".searching-results__title").shouldHave(text("По запросу «джинсы» найдено")));
    }

    @DisplayName("Проверка товаров в корзине")
    @Test
    void openBasket() {
        step("Open url 'https://www.wildberries.ru/'", () ->
                open("https://www.wildberries.ru/"));
        step("Нажать на корзину", () ->
                $("[class='navbar-pc__icon navbar-pc__icon--basket']").click());
        step("Проверить отсутствие товаров в корзине", () ->
        $("[class='basket-page__basket-empty basket-empty']").shouldHave(
                text("В корзине пока ничего нет")));
    }

    @DisplayName("Открыть раздел 'Доставка'")
    @Test
    void openDeliverySection() {
        step("Open url 'https://www.wildberries.ru/'", () ->
                open("https://www.wildberries.ru/"));
        step("Нажать на раздел Доставка", () ->
                $("[class='simple-menu__item'] [class='simple-menu__link']").click());
        step("Проверить, что раздел Доставка открывается", () ->
                $("[class='free-shipping-banner']").shouldHave(text("Доставка")));
    }

    @DisplayName("Сообщить о проблеме")
    @Test
    void sendMessageAboutProblem() {
        step("Open url 'https://www.wildberries.ru/'", () ->
                open("https://www.wildberries.ru/"));
        step("Нажать на иконку сообщения о проблеме", () ->
                $("[class='btn-chat__text']").click());
        step("Оставить сообщение о проблеме", () ->
                $("[class='chat__textarea j-chat-textarea']").sendKeys("Хьюстон, у нас проблема!"));
        step("Отправить сообщение", () ->
                $("[type='submit']").click());
        step("Проверить, что сообщение отправлено", () ->
                $("[class='message__manager']").shouldBe(visible));
    }


    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("Search test")
    void generatedTest() {
        step("open (\"https://www.wildberries.ru/\")", () -> {
            step("// todo: just add selenium action");
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page title should have header text")
    void titleTest() {
        step("Open url 'https://www.wildberries.ru/'", () ->
                open("https://www.wildberries.ru/"));

        step("Page title should have text 'Wildberries – Интернет-магазин модной одежды и обуви'",
             () -> {
                 String expectedTitle = "Wildberries – Интернет-магазин модной одежды и обуви";
                 String actualTitle = title();

                 assertThat(actualTitle).isEqualTo(expectedTitle);
             });
    }

    @Disabled
    @Test
    @Description("Autogenerated test")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://www.wildberries.ru/'", () ->
                open("https://www.wildberries.ru/"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}